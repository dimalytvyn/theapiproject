@model List<VoteViewModel>
@{ 
    var chamber = ViewData["chamber"].ToString();
    var chamberFormatted = chamber.First().ToString().ToUpper() + chamber.Substring(1);
}
@functions{
    string GetPartyColor(string party)
    {
        var partycolor = string.Empty;
        switch (party)
        {
            case "R":
                partycolor = "danger";
                break;
            case "D":
                partycolor = "primary";
                break;
            case "I":
                partycolor = "secondary";
                break;
        }
        return partycolor;
    }
}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3">
    <h1 class="h2 font-weight-light">
        Recent @chamberFormatted Votes
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group btn-group-toggle mr-2" data-toggle="buttons">
            <label class="btn btn-outline-secondary @{ if (chamber == "senate") {<text>active</text> } }">
                <input type="radio" name="options" id="house" autocomplete="off" @{ if (chamber == "senate") { <text> checked</text> } } onchange="OnChamberChanged(this,'senate')"> Senate
            </label>
            <label class="btn btn-outline-secondary @{ if (chamber == "house") {<text>active</text> } }">
                <input type="radio" name="options" id="house" autocomplete="off" @{ if (chamber == "house") { <text> checked</text> } } onchange="OnChamberChanged(this, 'house')"> House
            </label>
        </div>
    </div>
</div>

@if (Model?.Count > 0)
    {
    <div class="table-responsive">
        <table id="tbl_votes" class="table table-striped table-sm">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Description</th>
                    <th>Question</th>
                    <th>Position</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vote in Model)
                {  
                <tr>
                    <td>
                        @vote.member_id
                        @Convert.ToDateTime(vote.date).ToShortDateString() @Convert.ToDateTime(vote.time).ToShortTimeString()
                    </td>
                    <td>
                        @vote.description
                    </td>
                    <td>
                        @vote.question
                    </td>
                    <td>@vote.position</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
<div class="alert alert-danger">
    There are no Recent Votes in the @chamberFormatted
</div>
}
